{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NOMSA\\\\Desktop\\\\Project Github Notelist App\\\\notelist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { View, Flex } from '@aws-amplify/ui-react';\nimport { Container, Form, Button, Card, Table, Alert, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  onSubmit\n}) {\n  _s();\n  const [item, setItem] = useState('');\n  const [activity, setActivity] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [isUniqueError, setIsUniqueError] = useState(false); // State to track unique item error\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if the item is unique\n    if (tasks.some(task => task.item === item)) {\n      setIsUniqueError(true); // Set error state if item is not unique\n      return;\n    } else {\n      setIsUniqueError(false); // Reset error state if item is unique\n    }\n\n    setTasks([...tasks, {\n      item,\n      activity,\n      completed: false\n    }]);\n    setItem('');\n    setActivity('');\n  };\n  const markAsCompleted = index => {\n    const updatedTasks = [...tasks];\n    const taskToUpdate = updatedTasks[index];\n    if (taskToUpdate.completed) {\n      // If the task is currently marked as completed, unmark it and remove from completedTasks\n      taskToUpdate.completed = false;\n      setCompletedTasks(prevCompleted => prevCompleted.filter(task => task.item !== taskToUpdate.item));\n    } else {\n      // If the task is not currently marked as completed, mark it and add to completedTasks\n      taskToUpdate.completed = true;\n      setCompletedTasks(prevCompleted => [...prevCompleted, taskToUpdate]);\n    }\n    setTasks(updatedTasks);\n  };\n  const removeTask = itemNumber => {\n    // Remove the task from the tasks list and update the state\n    setTasks(prevTasks => prevTasks.filter(task => task.item !== itemNumber));\n\n    // Remove the task from the completedTasks list and update the state\n    setCompletedTasks(prevCompleted => prevCompleted.filter(task => task.item !== itemNumber));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container1\",\n    children: /*#__PURE__*/_jsxDEV(View, {\n      as: \"div\",\n      ariaLabel: \"View example\",\n      border: \"0px solid var(--amplify-colors-black)\",\n      color: \"var(--amplify-colors-blue-60)\",\n      height: \"auto\",\n      padding: \"1rem\",\n      width: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"card1 form\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              direction: \"column\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"item\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    placeholder: \"Enter item number\",\n                    value: item,\n                    onChange: e => setItem(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this), isUniqueError && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"danger\",\n                  style: {\n                    margin: '20px',\n                    padding: '20px'\n                  },\n                  children: \"Item number must be unique!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"activity\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter an activity or task\",\n                    value: activity,\n                    onChange: e => setActivity(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"button\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    marginLeft: '20px'\n                  },\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              marginLeft: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"NoteList App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The app is a to-do list manager where users after logging in, they can add new tasks, and manage their completion status. Tasks are organized in a table, with a checkbox indicating whether a task is completed. Upon marking a task as completed, it appears in a separate table displaying all completed tasks. You can also remove tasks that you marked as completed. The design is user-friendly with distinct cards for adding and viewing tasks, ensuring a streamlined task management experience.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Enter the task you want to add to the task management list!!!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"card2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"The List of Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.activity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\",\n                      checked: task.completed,\n                      onChange: () => markAsCompleted(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card3\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"The List of Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: completedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: task.activity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"smallButton\",\n                      variant: \"danger\",\n                      onClick: () => removeTask(task.item),\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oeM8bjEEoXCpgR/eSCsaZzGTIM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","View","Flex","Container","Form","Button","Card","Table","Alert","Row","Col","jsxDEV","_jsxDEV","App","onSubmit","_s","item","setItem","activity","setActivity","tasks","setTasks","completedTasks","setCompletedTasks","isUniqueError","setIsUniqueError","handleSubmit","e","preventDefault","some","task","completed","markAsCompleted","index","updatedTasks","taskToUpdate","prevCompleted","filter","removeTask","itemNumber","prevTasks","className","children","as","ariaLabel","border","color","height","padding","width","direction","alignItems","Group","controlId","Control","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","margin","marginLeft","Header","Body","striped","bordered","hover","map","Check","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NOMSA/Desktop/Project Github Notelist App/notelist/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { View, Flex } from '@aws-amplify/ui-react'\nimport { Container, Form, Button, Card, Table, Alert, Row, Col } from 'react-bootstrap';\nimport './App.css'\n\n\n\nfunction App({ onSubmit }) {\n\n  const [item, setItem] = useState('');\n  const [activity, setActivity] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [isUniqueError, setIsUniqueError] = useState(false); // State to track unique item error\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Check if the item is unique\n    if (tasks.some(task => task.item === item)) {\n      setIsUniqueError(true);  // Set error state if item is not unique\n      return;\n    } else {\n      setIsUniqueError(false);  // Reset error state if item is unique\n    }\n\n    setTasks([...tasks, { item, activity, completed: false }]);\n    setItem('');\n    setActivity('');\n  };\n\n  const markAsCompleted = (index) => {\n    const updatedTasks = [...tasks];\n    const taskToUpdate = updatedTasks[index];\n\n    if (taskToUpdate.completed) {\n        // If the task is currently marked as completed, unmark it and remove from completedTasks\n        taskToUpdate.completed = false;\n        setCompletedTasks(prevCompleted => prevCompleted.filter(task => task.item !== taskToUpdate.item));\n    } else {\n        // If the task is not currently marked as completed, mark it and add to completedTasks\n        taskToUpdate.completed = true;\n        setCompletedTasks(prevCompleted => [...prevCompleted, taskToUpdate]);\n    }\n\n    setTasks(updatedTasks);\n  };\n\n  const removeTask = (itemNumber) => {\n    // Remove the task from the tasks list and update the state\n    setTasks(prevTasks => prevTasks.filter(task => task.item !== itemNumber));\n\n    // Remove the task from the completedTasks list and update the state\n    setCompletedTasks(prevCompleted => prevCompleted.filter(task => task.item !== itemNumber));\n  };\n\n\n  return (\n        <Container className=\"container1\">\n          <View\n            as=\"div\"\n            ariaLabel=\"View example\"\n            border=\"0px solid var(--amplify-colors-black)\"\n            color=\"var(--amplify-colors-blue-60)\"\n            height=\"auto\"\n            padding=\"1rem\"\n            width=\"auto\"\n          >\n             <Card className=\"card1 form\">\n              <Row>\n                <Col>\n                  <Flex direction=\"column\" alignItems=\"center\">\n                    <Form onSubmit={handleSubmit}>\n                      <Form.Group controlId=\"item\">\n                        <Form.Control\n                          type=\"number\"\n                          placeholder=\"Enter item number\"\n                          value={item}\n                          onChange={(e) => setItem(e.target.value)}\n                          required\n                        />\n                      </Form.Group>\n                      {isUniqueError && (\n                        <Alert variant=\"danger\" style={{margin: '20px', padding: '20px'}}>Item number must be unique!</Alert>\n                      )}\n                      <Form.Group controlId=\"activity\">\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter an activity or task\"\n                          value={activity}\n                          onChange={(e) => setActivity(e.target.value)}\n                          required\n                        />\n                      </Form.Group>\n\n                      <Button className=\"button\" variant=\"primary\" type=\"submit\" style={{marginLeft: '20px'}}>\n                        Add Task\n                      </Button>\n                    </Form>\n                  </Flex>\n                </Col>\n                <Col style={{marginLeft: '20px'}}>\n                    <h4>NoteList App</h4>\n                    <p>The app is a to-do list manager where users after logging in, they can add new tasks, and manage their completion status. Tasks are organized in a table, with a checkbox indicating whether a task is completed. Upon marking a task as completed, it appears in a separate table displaying all completed tasks. You can also remove tasks that you marked as completed. The design is user-friendly with distinct cards for adding and viewing tasks, ensuring a streamlined task management experience.</p>\n                    <br/>\n                    <h6>Enter the task you want to add to the task management list!!!!</h6>\n                </Col>\n              </Row>\n            </Card>\n\n            <div className=\"cardsWrapper\">\n              <Card className=\"card2\">\n                <Card.Header>\n                  The List of Tasks\n                </Card.Header>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Item</th>\n                        <th>Activity</th>\n                        <th>Done</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {tasks.map((task, index) => (\n                        <tr key={index}>\n                          <td>{task.item}</td>\n                          <td>{task.activity}</td>\n                          <td>\n                            <Form.Check\n                              type=\"checkbox\"\n                              checked={task.completed}\n                              onChange={() => markAsCompleted(index)}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n\n              <Card className=\"card3\">\n                <Card.Header>\n                  The List of Completed Tasks\n                </Card.Header>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Item</th>\n                        <th>Activity</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {completedTasks.map((task, index) => (\n                        <tr key={index}>\n                          <td>{task.item}</td>\n                          <td>{task.activity}</td>\n                          <td>\n                            <Button className=\"smallButton\" variant=\"danger\" onClick={() => removeTask(task.item)}>\n                              Remove\n                            </Button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n\n              </Card>\n            </div>\n\n          </View>\n        </Container>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}